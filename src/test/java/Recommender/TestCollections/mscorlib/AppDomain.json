{"collections":[{"fullName":"System.AppDomain","methods":[{"name":"System.AppDomain.CurrentDomain","type":"PROP","count":5798},{"name":"System.AppDomain.BaseDirectory","type":"PROP","count":568},{"name":"System.AppDomain.GetAssemblies()","type":"SIMPLE","count":1174},{"name":"System.AppDomain.IsFullyTrusted","type":"PROP","count":58},{"name":"System.AppDomain.CreateDomain(System.String friendlyName, System.Security.Policy.Evidence securityInfo, System.AppDomainSetup info)","type":"SIMPLE","count":234},{"name":"System.AppDomain.Unload(System.AppDomain domain)","type":"SIMPLE","count":352},{"name":"System.AppDomain.SetupInformation","type":"PROP","count":360},{"name":"System.AppDomain.CreateDomain(System.String friendlyName, System.Security.Policy.Evidence securityInfo, System.AppDomainSetup info, System.Security.PermissionSet grantSet, System.Security.Policy.StrongName[] fullTrustAssemblies)","type":"SIMPLE","count":60},{"name":"System.AppDomain.IsDefaultAppDomain()","type":"SIMPLE","count":16},{"name":"(System.AppDomain) object","type":"CAST","count":90},{"name":"System.AppDomain.FriendlyName","type":"PROP","count":220},{"name":"System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access)","type":"SIMPLE","count":288},{"name":"System.AppDomain.CreateInstance(System.String assemblyName, System.String typeName, System.Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes)","type":"SIMPLE","count":2},{"name":"System.AppDomain.GetData(System.String name)","type":"SIMPLE","count":262},{"name":"System.AppDomain.CreateInstanceAndUnwrap(System.String assemblyName, System.String typeName)","type":"SIMPLE","count":162},{"name":"System.AppDomain.CreateInstanceFromAndUnwrap(System.String assemblyName, System.String typeName)","type":"SIMPLE","count":118},{"name":"System.AppDomain.RelativeSearchPath","type":"PROP","count":24},{"name":"System.AppDomain.GetType()","type":"SIMPLE","count":8},{"name":"System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy policy)","type":"SIMPLE","count":22},{"name":"System.AppDomain.SetData(System.String name, System.Object data)","type":"SIMPLE","count":344},{"name":"System.AppDomain.CreateDomain(System.String friendlyName)","type":"SIMPLE","count":56},{"name":"System.AppDomain.CreateInstance(System.String assemblyName, System.String typeName)","type":"SIMPLE","count":6},{"name":"System.AppDomain.ApplicationTrust","type":"PROP","count":2},{"name":"System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.String dir)","type":"SIMPLE","count":100},{"name":"System.AppDomain.CreateDomain(System.String friendlyName, System.Security.Policy.Evidence securityInfo, System.String appBasePath, System.String appRelativeSearchPath, System.Boolean shadowCopyFiles)","type":"SIMPLE","count":28},{"name":"System.AppDomain.GetCurrentThreadId()","type":"SIMPLE","count":38},{"name":"System.AppDomain.Evidence","type":"PROP","count":44},{"name":"System.AppDomain.ActivationContext","type":"PROP","count":2},{"name":"System.AppDomain.IsHomogenous","type":"PROP","count":26},{"name":"System.AppDomain.Load(System.String assemblyString)","type":"SIMPLE","count":24},{"name":"System.AppDomain.Load(System.Byte[] rawAssembly)","type":"SIMPLE","count":16},{"name":"System.AppDomain.DynamicDirectory","type":"PROP","count":14},{"name":"System.AppDomain.Id","type":"PROP","count":36},{"name":"System.AppDomain.DoCallBack(System.CrossAppDomainDelegate callBackDelegate)","type":"SIMPLE","count":160},{"name":"System.AppDomain.ReflectionOnlyGetAssemblies()","type":"SIMPLE","count":18},{"name":"System.AppDomain.ApplyPolicy(System.String assemblyName)","type":"SIMPLE","count":2},{"name":"System.AppDomain.CreateInstanceFromAndUnwrap(System.String assemblyFile, System.String typeName, System.Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes)","type":"SIMPLE","count":14},{"name":"System.AppDomain.IsFinalizingForUnload()","type":"SIMPLE","count":22},{"name":"System.AppDomain.ExecuteAssemblyByName(System.String assemblyName, System.String[] args)","type":"SIMPLE","count":4},{"name":"System.AppDomain.ExecuteAssembly(System.String assemblyFile, System.String[] args)","type":"SIMPLE","count":4},{"name":"System.AppDomain.Load(System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity)","type":"SIMPLE","count":4},{"name":"System.AppDomain.Load(System.Reflection.AssemblyName assemblyRef)","type":"SIMPLE","count":46},{"name":"System.AppDomain.CreateInstanceFrom(System.String assemblyFile, System.String typeName)","type":"SIMPLE","count":16},{"name":"System.AppDomain.CreateInstanceAndUnwrap(System.String assemblyName, System.String typeName, System.Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes)","type":"SIMPLE","count":22},{"name":"System.AppDomain.PermissionSet","type":"PROP","count":4},{"name":"System.AppDomain.ExecuteAssembly(System.String assemblyFile)","type":"SIMPLE","count":6},{"name":"System.AppDomain.MonitoringIsEnabled","type":"PROP","count":18},{"name":"System.AppDomain.MonitoringSurvivedProcessMemorySize","type":"PROP","count":36},{"name":"System.AppDomain.CreateInstanceFrom(System.String assemblyFile, System.String typeName, System.Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes)","type":"SIMPLE","count":36},{"name":"System.AppDomain.AppendPrivatePath(System.String path)","type":"SIMPLE","count":26},{"name":"System.AppDomain.Load(System.Byte[] rawAssembly, System.Byte[] rawSymbolStore)","type":"SIMPLE","count":12},{"name":"System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.String dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, System.Boolean isSynchronized, System.Collections.Generic.IEnumerable`1[[T -\u003e System.Reflection.Emit.CustomAttributeBuilder, mscorlib, 2.0.0.0]] assemblyAttributes)","type":"SIMPLE","count":4},{"name":"System.AppDomain.ShadowCopyFiles","type":"PROP","count":10},{"name":"System.AppDomain.CreateInstanceAndUnwrap(System.String assemblyName, System.String typeName, System.Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes, System.Security.Policy.Evidence securityAttributes)","type":"SIMPLE","count":8},{"name":"System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable`1[[T -\u003e System.Reflection.Emit.CustomAttributeBuilder, mscorlib, 4.0.0.0]] assemblyAttributes)","type":"SIMPLE","count":10},{"name":"System.AppDomain.CreateDomain(System.String friendlyName, System.Security.Policy.Evidence securityInfo)","type":"SIMPLE","count":2},{"name":"System.AppDomain.CreateInstanceFrom(System.String assemblyFile, System.String typeName, System.Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes, System.Security.Policy.Evidence securityAttributes)","type":"SIMPLE","count":2},{"name":"System.AppDomain.CreateInstance(System.String assemblyName, System.String typeName, System.Boolean ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Object[] args, System.Globalization.CultureInfo culture, System.Object[] activationAttributes, System.Security.Policy.Evidence securityAttributes)","type":"SIMPLE","count":4},{"name":"System.AppDomain.ClearPrivatePath()","type":"SIMPLE","count":4},{"name":"System.AppDomain.SetShadowCopyFiles()","type":"SIMPLE","count":6},{"name":"System.AppDomain.ExecuteAssembly(System.String assemblyFile, System.Security.Policy.Evidence assemblySecurity, System.String[] args)","type":"SIMPLE","count":2},{"name":"System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.String dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, System.Boolean isSynchronized)","type":"SIMPLE","count":4}]}]}